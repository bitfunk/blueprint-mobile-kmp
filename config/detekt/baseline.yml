<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>LongParameterList:AppThemeColorScheme.kt$AppThemeColorScheme$( primary: Color = this.primary, onPrimary: Color = this.onPrimary, primaryContainer: Color = this.primaryContainer, onPrimaryContainer: Color = this.onPrimaryContainer, inversePrimary: Color = this.inversePrimary, secondary: Color = this.secondary, onSecondary: Color = this.onSecondary, secondaryContainer: Color = this.secondaryContainer, onSecondaryContainer: Color = this.onSecondaryContainer, tertiary: Color = this.tertiary, onTertiary: Color = this.onTertiary, tertiaryContainer: Color = this.tertiaryContainer, onTertiaryContainer: Color = this.onTertiaryContainer, background: Color = this.background, onBackground: Color = this.onBackground, surface: Color = this.surface, onSurface: Color = this.onSurface, surfaceVariant: Color = this.surfaceVariant, onSurfaceVariant: Color = this.onSurfaceVariant, inverseSurface: Color = this.inverseSurface, inverseOnSurface: Color = this.inverseOnSurface, error: Color = this.error, onError: Color = this.onError, errorContainer: Color = this.errorContainer, onErrorContainer: Color = this.onErrorContainer, outline: Color = this.outline, )</ID>
    <ID>LongParameterList:AppThemeColorScheme.kt$AppThemeColorScheme$( primary: Color, onPrimary: Color, primaryContainer: Color, onPrimaryContainer: Color, inversePrimary: Color, secondary: Color, onSecondary: Color, secondaryContainer: Color, onSecondaryContainer: Color, tertiary: Color, onTertiary: Color, tertiaryContainer: Color, onTertiaryContainer: Color, background: Color, onBackground: Color, surface: Color, onSurface: Color, surfaceVariant: Color, onSurfaceVariant: Color, inverseSurface: Color, inverseOnSurface: Color, error: Color, onError: Color, errorContainer: Color, onErrorContainer: Color, outline: Color, )</ID>
    <ID>MagicNumber:AppThemeTypography.kt$AppThemeTypography$0.25</ID>
    <ID>MagicNumber:Dangerfile.df.kts$1200</ID>
    <ID>MagicNumber:Dangerfile.df.kts$20</ID>
    <ID>MagicNumber:Dangerfile.df.kts$300</ID>
    <ID>MagicNumber:Dangerfile.df.kts$600</ID>
    <ID>MagicNumber:VersionConfigurationPlugin.kt$VersionConfigurationPlugin$100</ID>
    <ID>MagicNumber:build.gradle.kts$0.99</ID>
    <ID>SpreadOperator:clean.main.kts$(commands[0], *arguments.toTypedArray())</ID>
    <ID>SwallowedException:PainterResources.kt$catch (throwable: Throwable) { throw IllegalArgumentException(errorMessage) }</ID>
    <ID>TooGenericExceptionCaught:PainterResources.kt$throwable: Throwable</ID>
    <ID>TopLevelPropertyNaming:PainterResources.kt$private const val errorMessage = "Only VectorDrawables and rasterized asset types are supported ex. PNG, JPG"</ID>
    <ID>UnusedPrivateMember:AndroidAppConfigurationPlugin.kt$AndroidAppConfigurationPlugin$private fun setupAndroidKotlinCompatibility(project: Project)</ID>
  </CurrentIssues>
</SmellBaseline>
